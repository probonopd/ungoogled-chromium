# Instructions too vague for my taste... means I have to fiddle around with trial and error...
# Use "export ..." for AR, NM, CC, CXX, or others to specify the compiler to use
# It defaults to LLVM tools. See ./ungoogled_packaging/build.sh for more details

language: cpp
compiler: clang
sudo: require
dist: trusty

addons:
  apt:
    sources:
      - sourceline: "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main"
      - ubuntu-toolchain-r-test
    packages:
      - clang-6.0
      - lld-6.0
      - llvm-6.0-dev
      - python
      - python3
      - ninja-build
      
# install:
#  - sudo apt-get -y install 
# - source /opt/qt*/bin/qt*-env.sh

script:
  - mkdir -p build/src
  - ./get_package.py linux_simple build/src/ungoogled_packaging
  - cd build/src
  - ./ungoogled_packaging/build.sh
  - ./ungoogled_packaging/package.sh
# - TO BE DONE FROM HERE ON 
  - make INSTALL_ROOT=appdir -j$(nproc) install ; find appdir/
  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - export VERSION=$(git rev-parse --short HEAD) # linuxdeployqt uses this for naming the file
  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -bundle-non-qt-libs
  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage

after_success:
  - find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - # curl --upload-file APPNAME*.AppImage https://transfer.sh/APPNAME-git.$(git rev-parse --short HEAD)-x86_64.AppImage
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh APPNAME*.AppImage*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
